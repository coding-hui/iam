definitions:
  api.PageResponse:
    properties:
      list: {}
      total:
        type: integer
    type: object
  api.Response:
    properties:
      code:
        description: Code defines the business error code.
        type: integer
      data: {}
      msg:
        description: |-
          Msg contains the detail of this message.
          This message is suitable to be exposed to external
        type: string
      reference:
        description: Reference returns the reference document which maybe useful to
          solve this error.
        type: string
    type: object
  v1.Extend:
    additionalProperties: true
    type: object
  v1.ObjectMeta:
    properties:
      createdAt:
        description: |-
          CreatedAt is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        type: string
      extend:
        allOf:
        - $ref: '#/definitions/v1.Extend'
        description: Extend store the fields that need to be added, but do not want
          to add a new table column, will not be stored in db.
      id:
        description: |-
          ID is the unique in time and space value for this object. It is typically generated by
          the storage on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
        type: integer
      instanceID:
        description: |-
          InstanceID defines a string type resource identifier,
          use prefixed to distinguish resource types, easy to remember, Url-friendly.
        type: string
      name:
        description: |-
          Required: true
          Name must be unique. Is required when creating resources.
          Name is primarily intended for creation idempotence and configuration
          definition.
          It will be generated automated only if Name is not specified.
          Cannot be updated.
        type: string
      updatedAt:
        description: |-
          UpdatedAt is a timestamp representing the server time when this object was updated.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        type: string
    type: object
  v1alpha1.User:
    properties:
      alias:
        maxLength: 30
        minLength: 1
        type: string
      disabled:
        type: boolean
      email:
        description: 'Required: true'
        maxLength: 100
        minLength: 1
        type: string
      last_login_time:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      password:
        description: 'Required: true'
        type: string
      phone:
        type: string
      status:
        type: integer
      tenantId:
        type: integer
    required:
    - email
    - password
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    get:
      description: list users
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: fuzzy search based on alias
        in: query
        name: alias
        type: string
      - description: fuzzy search based on email
        in: query
        name: email
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: '{"code": "000", "data": [...]} "users'
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/api.PageResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/v1alpha1.User'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: list users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.User'
      responses:
        "200":
          description: '{"code": "000", "data": [...]}'
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - Bearer: []
      summary: create user
      tags:
      - Users
  /api/v1/users/{name}:
    delete:
      description: delete user
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "000", "data": [...]}'
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - Bearer: []
      summary: delete user
      tags:
      - Users
    get:
      description: get user detail
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "000", "data": [...]} "user detail'
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.User'
              type: object
      security:
      - Bearer: []
      summary: get user detail
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: update user info
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      - description: user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.User'
      responses:
        "200":
          description: '{"code": "000", "data": [...]}'
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - Bearer: []
      summary: update user info
      tags:
      - Users
  /login/{identityprovider}:
    post:
      description: Login by identity provider user
      parameters:
      - description: password of a user
        in: query
        name: password
        required: true
        type: string
      responses:
        "200":
          description: '{"code": "000", "data": [...]}'
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - Basic: []
      summary: Login by identity provider user
      tags:
      - Authentication
  /ping:
    get:
      description: check service is running
      responses:
        "200":
          description: '{"code": "000", "data": [...]}'
          schema:
            $ref: '#/definitions/api.Response'
      summary: check service is running
      tags:
      - System
swagger: "2.0"
