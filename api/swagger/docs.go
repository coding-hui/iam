// Code generated by swaggo/swag. DO NOT EDIT.

package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://iam.wecoding.top/",
        "contact": {
            "name": "coding-hui",
            "url": "https://github.com/coding-hui/iam",
            "email": "wecoding@yeah.net"
        },
        "license": {
            "name": "MIT",
            "url": "https://en.wikipedia.org/wiki/MIT_License"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/refresh-token": {
            "get": {
                "description": "refresh token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "refresh token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "RefreshToken",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token info",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/v1alpha1.RefreshTokenResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "description": "login by user account and password",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "login system",
                "parameters": [
                    {
                        "description": "login request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.AuthenticateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token info",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/v1alpha1.AuthenticateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/policies": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "List policies",
                "tags": [
                    "Policies"
                ],
                "summary": "List policies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "fuzzy search based on name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page size number",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "policies",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/v1alpha1.PolicyList"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Create a policy",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Policies"
                ],
                "summary": "Create a policy",
                "parameters": [
                    {
                        "description": "policy rule",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.CreatePolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create a nnw policy",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/policies/{name}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Get a Policy",
                "tags": [
                    "Policies"
                ],
                "summary": "Get a Policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of a policy",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Policy detail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/v1alpha1.DetailPolicyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Update a Policy",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Policies"
                ],
                "summary": "Update a Policy",
                "parameters": [
                    {
                        "description": "Policy rule",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.UpdatePolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update policy info",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "Delete Policy",
                "tags": [
                    "Policies"
                ],
                "summary": "Delete Policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of a policy",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Policy successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/resources": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "list resource",
                "tags": [
                    "Resources"
                ],
                "summary": "list resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "fuzzy search based on name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page size number",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "resources",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Resource"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "create resource",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "create resource",
                "parameters": [
                    {
                        "description": "resource info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.CreateResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create a new resource",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/resources/{name}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "get resource detail",
                "tags": [
                    "Resources"
                ],
                "summary": "get resource detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of a resource",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "resource detail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Resource"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "update resource",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Resources"
                ],
                "summary": "update resource",
                "parameters": [
                    {
                        "description": "resource info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.UpdateResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update resource info",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "delete resource",
                "tags": [
                    "Resources"
                ],
                "summary": "delete resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of a resource",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete resource",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "list role",
                "tags": [
                    "Roles"
                ],
                "summary": "list role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "fuzzy search based on name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page size number",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "roles",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/v1alpha1.RoleBase"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "create role",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "create role",
                "parameters": [
                    {
                        "description": "role info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.CreateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create a new role",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{instanceId}/assign": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "assign role",
                "tags": [
                    "Roles"
                ],
                "summary": "assign role",
                "parameters": [
                    {
                        "description": "assign role request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.AssignRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "assign role",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{instanceId}/revoke": {
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "revoke role",
                "tags": [
                    "Roles"
                ],
                "summary": "revoke role",
                "parameters": [
                    {
                        "description": "revoke role request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.RevokeRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "revoke role",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{name}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "get role detail",
                "tags": [
                    "Roles"
                ],
                "summary": "get role detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of a role",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role detail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Resource"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "update role",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "update role",
                "parameters": [
                    {
                        "description": "role info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.UpdateRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update role info",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "delete role",
                "tags": [
                    "Roles"
                ],
                "summary": "delete role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of a role",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete role",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "list users",
                "tags": [
                    "Users"
                ],
                "summary": "list users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "fuzzy search based on name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "fuzzy search based on alias",
                        "name": "alias",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "fuzzy search based on email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page number",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "query the page size number",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "user info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "create a nnw user",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{name}": {
            "get": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "get user detail",
                "tags": [
                    "Users"
                ],
                "summary": "get user detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "identifier of a user",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user detail",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.User"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "update user info",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "update user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "identifier of a user",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/v1alpha1.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "update user info",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerTokenAuth": []
                    }
                ],
                "description": "delete user",
                "tags": [
                    "Users"
                ],
                "summary": "delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "identifier of a user",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "delete user",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "check service is running",
                "tags": [
                    "System"
                ],
                "summary": "check service is running",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code defines the business error code.",
                    "type": "integer"
                },
                "data": {
                    "description": "Data return data object"
                },
                "msg": {
                    "description": "Msg contains the detail of this message.\nThis message is suitable to be exposed to external",
                    "type": "string"
                },
                "reference": {
                    "description": "Reference returns the reference document which maybe useful to solve this error.",
                    "type": "string"
                },
                "success": {
                    "description": "Success request is successful",
                    "type": "boolean"
                },
                "total": {
                    "description": "Total total of page",
                    "type": "integer"
                }
            }
        },
        "model.Action": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "integer"
                }
            }
        },
        "model.Resource": {
            "type": "object",
            "required": [
                "api",
                "method",
                "type"
            ],
            "properties": {
                "actions": {
                    "description": "Actions resource access mode.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Action"
                    }
                },
                "api": {
                    "description": "Type unique identification of resource API.",
                    "type": "string"
                },
                "description": {
                    "description": "Description resource description.",
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "metadata": {
                    "description": "Standard object's metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ]
                },
                "method": {
                    "description": "Method resource method.",
                    "type": "string"
                },
                "type": {
                    "description": "Type resource type.",
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "description": "Required: true",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "lastLoginTime": {
                    "type": "string"
                },
                "metadata": {
                    "description": "Standard object's metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ]
                },
                "password": {
                    "description": "Required: true",
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tenantId": {
                    "type": "integer"
                }
            }
        },
        "v1.Extend": {
            "type": "object",
            "additionalProperties": true
        },
        "v1.ObjectMeta": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "CreatedAt is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.",
                    "type": "string"
                },
                "extend": {
                    "description": "Extend store the fields that need to be added, but do not want to add a new table column, will not be stored in\ndb.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.Extend"
                        }
                    ]
                },
                "id": {
                    "description": "ID is the unique in time and space value for this object. It is typically generated by\nthe storage on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.",
                    "type": "integer"
                },
                "instanceId": {
                    "description": "InstanceID defines a string type resource identifier,\nuse prefixed to distinguish resource types, easy to remember, Url-friendly.",
                    "type": "string"
                },
                "name": {
                    "description": "Required: true\nName must be unique. Is required when creating resources.\nName is primarily intended for creation idempotence and configuration\ndefinition.\nIt will be generated automated only if Name is not specified.\nCannot be updated.",
                    "type": "string"
                },
                "updatedAt": {
                    "description": "UpdatedAt is a timestamp representing the server time when this object was updated.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.",
                    "type": "string"
                }
            }
        },
        "v1alpha1.Action": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.AssignRoleRequest": {
            "type": "object",
            "required": [
                "instanceId"
            ],
            "properties": {
                "instanceId": {
                    "description": "InstanceID role instanceID.",
                    "type": "string"
                },
                "targets": {
                    "description": "Targets target resource instanceIds.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1alpha1.AuthenticateRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.AuthenticateResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "AccessToken is the token that authorizes and authenticates\nthe requests.",
                    "type": "string"
                },
                "expires_in": {
                    "description": "ExpiresIn is the optional expiration second of the access token.",
                    "type": "integer"
                },
                "refresh_token": {
                    "description": "RefreshToken is a token that's used by the application\n(as opposed to the user) to refresh the access token\nif it expires.",
                    "type": "string"
                },
                "token_type": {
                    "description": "TokenType is the type of token.\nThe Type method returns either this or \"Bearer\", the default.",
                    "type": "string"
                },
                "user": {
                    "description": "User user info",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.UserBase"
                        }
                    ]
                }
            }
        },
        "v1alpha1.CreatePolicyRequest": {
            "type": "object",
            "required": [
                "actions",
                "name",
                "resources",
                "subjects",
                "type"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "effect": {
                    "type": "string"
                },
                "meta": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.CreateResourceRequest": {
            "type": "object",
            "required": [
                "actions",
                "api",
                "method",
                "name",
                "type"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.Action"
                    }
                },
                "api": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.CreateRoleRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                }
            }
        },
        "v1alpha1.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.DetailPolicyResponse": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "adapter": {
                    "description": "casbin required",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "effect": {
                    "type": "string"
                },
                "metadata": {
                    "description": "Standard object's metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ]
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.PolicyBase": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "adapter": {
                    "description": "casbin required",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "effect": {
                    "type": "string"
                },
                "metadata": {
                    "description": "Standard object's metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ]
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "policyRules": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.PolicyList": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.PolicyBase"
                    }
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "v1alpha1.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.RevokeRoleRequest": {
            "type": "object",
            "required": [
                "instanceId"
            ],
            "properties": {
                "instanceId": {
                    "description": "InstanceID role instanceID.",
                    "type": "string"
                },
                "targets": {
                    "description": "Targets target resource instanceIds.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "v1alpha1.RoleBase": {
            "type": "object",
            "required": [
                "owner"
            ],
            "properties": {
                "description": {
                    "description": "Description tenant description.",
                    "type": "string"
                },
                "disabled": {
                    "description": "Disabled tenant state.",
                    "type": "boolean"
                },
                "metadata": {
                    "description": "Standard object's metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ]
                },
                "owner": {
                    "description": "Owner tenant owner name.",
                    "type": "string"
                }
            }
        },
        "v1alpha1.UpdatePolicyRequest": {
            "type": "object",
            "required": [
                "actions",
                "resources",
                "subjects",
                "type"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "effect": {
                    "type": "string"
                },
                "meta": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.UpdateResourceRequest": {
            "type": "object",
            "required": [
                "actions",
                "api",
                "method",
                "name",
                "type"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.Action"
                    }
                },
                "api": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.UpdateRoleRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.UpdateUserRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "v1alpha1.UserBase": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "disabled": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "lastLoginTime": {
                    "type": "string"
                },
                "metadata": {
                    "description": "Standard object's metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ObjectMeta"
                        }
                    ]
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "tenantId": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerTokenAuth": {
            "description": "Set Bearer token in the request header",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1alpha",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "IAM API",
	Description:      "IAM ApiService API Doc.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
