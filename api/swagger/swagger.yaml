# Copyright (c) 2023 coding-hui. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file.

definitions:
  api.Response:
    properties:
      code:
        description: Code defines the business error code.
        type: integer
      data:
        description: Data return data object
      msg:
        description: |-
          Msg contains the detail of this message.
          This message is suitable to be exposed to external
        type: string
      reference:
        description: Reference returns the reference document which maybe useful to
          solve this error.
        type: string
      success:
        description: Success request is successful
        type: boolean
      total:
        description: Total total of page
        type: integer
    type: object
  model.Action:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      resourceId:
        type: integer
    type: object
  model.Resource:
    properties:
      actions:
        description: Actions resource access mode.
        items:
          $ref: '#/definitions/model.Action'
        type: array
      api:
        description: Type unique identification of resource API.
        type: string
      description:
        description: Description resource description.
        type: string
      isDefault:
        type: boolean
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      method:
        description: Method resource method.
        type: string
      type:
        description: Type resource type.
        type: string
    required:
    - api
    - method
    - type
    type: object
  model.User:
    properties:
      alias:
        maxLength: 30
        minLength: 1
        type: string
      disabled:
        type: boolean
      email:
        description: 'Required: true'
        maxLength: 100
        minLength: 1
        type: string
      lastLoginTime:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      password:
        description: 'Required: true'
        type: string
      phone:
        type: string
      status:
        type: integer
      tenantId:
        type: integer
    required:
    - email
    - password
    type: object
  v1.Extend:
    additionalProperties: true
    type: object
  v1.ObjectMeta:
    properties:
      createdAt:
        description: |-
          CreatedAt is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        type: string
      extend:
        allOf:
        - $ref: '#/definitions/v1.Extend'
        description: |-
          Extend store the fields that need to be added, but do not want to add a new table column, will not be stored in
          db.
      id:
        description: |-
          ID is the unique in time and space value for this object. It is typically generated by
          the storage on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
        type: integer
      instanceId:
        description: |-
          InstanceID defines a string type resource identifier,
          use prefixed to distinguish resource types, easy to remember, Url-friendly.
        type: string
      name:
        description: |-
          Required: true
          Name must be unique. Is required when creating resources.
          Name is primarily intended for creation idempotence and configuration
          definition.
          It will be generated automated only if Name is not specified.
          Cannot be updated.
        type: string
      updatedAt:
        description: |-
          UpdatedAt is a timestamp representing the server time when this object was updated.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        type: string
    type: object
  v1alpha1.Action:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  v1alpha1.AssignRoleRequest:
    properties:
      instanceId:
        description: InstanceID role instanceID.
        type: string
      targets:
        description: Targets target resource instanceIds.
        items:
          type: string
        type: array
    required:
    - instanceId
    type: object
  v1alpha1.AuthenticateRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  v1alpha1.AuthenticateResponse:
    properties:
      access_token:
        description: |-
          AccessToken is the token that authorizes and authenticates
          the requests.
        type: string
      expires_in:
        description: ExpiresIn is the optional expiration second of the access token.
        type: integer
      refresh_token:
        description: |-
          RefreshToken is a token that's used by the application
          (as opposed to the user) to refresh the access token
          if it expires.
        type: string
      token_type:
        description: |-
          TokenType is the type of token.
          The Type method returns either this or "Bearer", the default.
        type: string
      user:
        allOf:
        - $ref: '#/definitions/v1alpha1.UserBase'
        description: User user info
    type: object
  v1alpha1.CreatePolicyRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      description:
        maxLength: 30
        minLength: 1
        type: string
      effect:
        type: string
      meta:
        type: string
      name:
        type: string
      owner:
        type: string
      resources:
        items:
          type: string
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    required:
    - actions
    - name
    - resources
    - subjects
    - type
    type: object
  v1alpha1.CreateResourceRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/v1alpha1.Action'
        type: array
      api:
        type: string
      description:
        type: string
      isDefault:
        type: boolean
      method:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - actions
    - api
    - method
    - name
    - type
    type: object
  v1alpha1.CreateRoleRequest:
    properties:
      description:
        type: string
      displayName:
        type: string
      name:
        type: string
      owner:
        maxLength: 30
        minLength: 1
        type: string
    required:
    - name
    type: object
  v1alpha1.CreateUserRequest:
    properties:
      alias:
        maxLength: 30
        minLength: 1
        type: string
      email:
        maxLength: 100
        minLength: 1
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  v1alpha1.DetailPolicyResponse:
    properties:
      actions:
        items:
          type: string
        type: array
      adapter:
        description: casbin required
        type: string
      description:
        type: string
      effect:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      model:
        type: string
      owner:
        type: string
      policyRules:
        items:
          items:
            type: string
          type: array
        type: array
      resources:
        items:
          type: string
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  v1alpha1.PolicyBase:
    properties:
      actions:
        items:
          type: string
        type: array
      adapter:
        description: casbin required
        type: string
      description:
        type: string
      effect:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      model:
        type: string
      owner:
        type: string
      policyRules:
        items:
          items:
            type: string
          type: array
        type: array
      resources:
        items:
          type: string
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  v1alpha1.PolicyList:
    properties:
      items:
        items:
          $ref: '#/definitions/v1alpha1.PolicyBase'
        type: array
      totalCount:
        type: integer
    type: object
  v1alpha1.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1alpha1.RevokeRoleRequest:
    properties:
      instanceId:
        description: InstanceID role instanceID.
        type: string
      targets:
        description: Targets target resource instanceIds.
        items:
          type: string
        type: array
    required:
    - instanceId
    type: object
  v1alpha1.RoleBase:
    properties:
      description:
        description: Description tenant description.
        type: string
      disabled:
        description: Disabled tenant state.
        type: boolean
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      owner:
        description: Owner tenant owner name.
        type: string
    required:
    - owner
    type: object
  v1alpha1.UpdatePolicyRequest:
    properties:
      actions:
        items:
          type: string
        type: array
      description:
        maxLength: 30
        minLength: 1
        type: string
      effect:
        type: string
      meta:
        type: string
      resources:
        items:
          type: string
        type: array
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    required:
    - actions
    - resources
    - subjects
    - type
    type: object
  v1alpha1.UpdateResourceRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/v1alpha1.Action'
        type: array
      api:
        type: string
      description:
        type: string
      isDefault:
        type: boolean
      method:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - actions
    - api
    - method
    - name
    - type
    type: object
  v1alpha1.UpdateRoleRequest:
    properties:
      description:
        type: string
      displayName:
        type: string
    type: object
  v1alpha1.UpdateUserRequest:
    properties:
      alias:
        maxLength: 30
        minLength: 1
        type: string
      email:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - email
    type: object
  v1alpha1.UserBase:
    properties:
      alias:
        type: string
      disabled:
        type: boolean
      email:
        type: string
      lastLoginTime:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      password:
        type: string
      phone:
        type: string
      status:
        type: integer
      tenantId:
        type: integer
    type: object
host: localhost:8000
info:
  contact:
    email: wecoding@yeah.net
    name: coding-hui
    url: https://github.com/coding-hui/iam
  description: IAM ApiService API Doc.
  license:
    name: MIT
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: http://iam.wecoding.top/
  title: IAM API
  version: v1alpha
paths:
  /api/v1/auth/refresh-token:
    get:
      consumes:
      - application/json
      description: refresh token
      parameters:
      - description: refresh token
        in: header
        name: RefreshToken
        required: true
        type: string
      responses:
        "200":
          description: token info
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.RefreshTokenResponse'
              type: object
      summary: refresh token
      tags:
      - Authentication
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: login by user account and password
      parameters:
      - description: login request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.AuthenticateRequest'
      responses:
        "200":
          description: token info
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.AuthenticateResponse'
              type: object
      summary: login system
      tags:
      - Authentication
  /api/v1/policies:
    get:
      description: List policies
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: policies
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.PolicyList'
              type: object
      security:
      - BearerTokenAuth: []
      summary: List policies
      tags:
      - Policies
    post:
      consumes:
      - application/json
      description: Create a policy
      parameters:
      - description: policy rule
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreatePolicyRequest'
      responses:
        "200":
          description: Create a nnw policy
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: Create a policy
      tags:
      - Policies
  /api/v1/policies/{name}:
    delete:
      description: Delete Policy
      parameters:
      - description: name of a policy
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: Policy successfully deleted
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: Delete Policy
      tags:
      - Policies
    get:
      description: Get a Policy
      parameters:
      - description: name of a policy
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: Policy detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.DetailPolicyResponse'
              type: object
      security:
      - BearerTokenAuth: []
      summary: Get a Policy
      tags:
      - Policies
    put:
      consumes:
      - application/json
      description: Update a Policy
      parameters:
      - description: Policy rule
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdatePolicyRequest'
      responses:
        "200":
          description: Update policy info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: Update a Policy
      tags:
      - Policies
  /api/v1/resources:
    get:
      description: list resource
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: resources
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Resource'
                  type: array
              type: object
      security:
      - BearerTokenAuth: []
      summary: list resource
      tags:
      - Resources
    post:
      consumes:
      - application/json
      description: create resource
      parameters:
      - description: resource info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreateResourceRequest'
      responses:
        "200":
          description: create a new resource
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: create resource
      tags:
      - Resources
  /api/v1/resources/{name}:
    delete:
      description: delete resource
      parameters:
      - description: name of a resource
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: delete resource
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: delete resource
      tags:
      - Resources
    get:
      description: get resource detail
      parameters:
      - description: name of a resource
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: resource detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Resource'
              type: object
      security:
      - BearerTokenAuth: []
      summary: get resource detail
      tags:
      - Resources
    put:
      consumes:
      - application/json
      description: update resource
      parameters:
      - description: resource info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdateResourceRequest'
      responses:
        "200":
          description: update resource info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: update resource
      tags:
      - Resources
  /api/v1/roles:
    get:
      description: list role
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: roles
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1alpha1.RoleBase'
                  type: array
              type: object
      security:
      - BearerTokenAuth: []
      summary: list role
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: create role
      parameters:
      - description: role info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreateRoleRequest'
      responses:
        "200":
          description: create a new role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: create role
      tags:
      - Roles
  /api/v1/roles/{instanceId}/assign:
    post:
      description: assign role
      parameters:
      - description: assign role request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.AssignRoleRequest'
      responses:
        "200":
          description: assign role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: assign role
      tags:
      - Roles
  /api/v1/roles/{instanceId}/revoke:
    post:
      description: revoke role
      parameters:
      - description: revoke role request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.RevokeRoleRequest'
      responses:
        "200":
          description: revoke role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: revoke role
      tags:
      - Roles
  /api/v1/roles/{name}:
    delete:
      description: delete role
      parameters:
      - description: name of a role
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: delete role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: delete role
      tags:
      - Roles
    get:
      description: get role detail
      parameters:
      - description: name of a role
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: role detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Resource'
              type: object
      security:
      - BearerTokenAuth: []
      summary: get role detail
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: update role
      parameters:
      - description: role info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdateRoleRequest'
      responses:
        "200":
          description: update role info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: update role
      tags:
      - Roles
  /api/v1/users:
    get:
      description: list users
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: fuzzy search based on alias
        in: query
        name: alias
        type: string
      - description: fuzzy search based on email
        in: query
        name: email
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: users
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.User'
                  type: array
              type: object
      security:
      - BearerTokenAuth: []
      summary: list users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreateUserRequest'
      responses:
        "200":
          description: create a nnw user
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: create user
      tags:
      - Users
  /api/v1/users/{name}:
    delete:
      description: delete user
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: delete user
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: delete user
      tags:
      - Users
    get:
      description: get user detail
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: user detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - BearerTokenAuth: []
      summary: get user detail
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: update user info
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      - description: user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdateUserRequest'
      responses:
        "200":
          description: update user info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: update user info
      tags:
      - Users
  /ping:
    get:
      description: check service is running
      responses:
        "200":
          description: pong
          schema:
            $ref: '#/definitions/api.Response'
      summary: check service is running
      tags:
      - System
securityDefinitions:
  BearerTokenAuth:
    description: Set Bearer token in the request header
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
