# Copyright (c) 2023 coding-hui. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file.

definitions:
  api.Response:
    properties:
      code:
        description: Code defines the business error code.
        type: integer
      data:
        description: Data return data object
      msg:
        description: |-
          Msg contains the detail of this message.
          This message is suitable to be exposed to external
        type: string
      reference:
        description: Reference returns the reference document which maybe useful to
          solve this error.
        type: string
      success:
        description: Success request is successful
        type: boolean
    type: object
  v1.Extend:
    additionalProperties: true
    type: object
  v1.ObjectMeta:
    properties:
      createdAt:
        description: |-
          CreatedAt is a timestamp representing the server time when this object was
          created. It is not guaranteed to be set in happens-before order across separate operations.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        type: string
      extend:
        allOf:
        - $ref: '#/definitions/v1.Extend'
        description: |-
          Extend store the fields that need to be added, but do not want to add a new table column, will not be stored in
          db.
      id:
        description: |-
          ID is the unique in time and space value for this object. It is typically generated by
          the storage on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
        type: integer
      instanceId:
        description: |-
          InstanceID defines a string type resource identifier,
          use prefixed to distinguish resource types, easy to remember, Url-friendly.
        type: string
      name:
        description: |-
          Required: true
          Name must be unique. Is required when creating resources.
          Name is primarily intended for creation idempotence and configuration
          definition.
          It will be generated automated only if Name is not specified.
          Cannot be updated.
        type: string
      updatedAt:
        description: |-
          UpdatedAt is a timestamp representing the server time when this object was updated.
          Clients may not set this value. It is represented in RFC3339 form and is in UTC.

          Populated by the system.
          Read-only.
          Null for lists.
        type: string
    type: object
  v1alpha1.Action:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  v1alpha1.AssignRoleRequest:
    properties:
      instanceId:
        description: InstanceID role instanceID.
        type: string
      targets:
        description: Targets target resource instanceIds.
        items:
          type: string
        type: array
    required:
    - instanceId
    type: object
  v1alpha1.AuthenticateRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  v1alpha1.AuthenticateResponse:
    properties:
      access_token:
        description: |-
          AccessToken is the token that authorizes and authenticates
          the requests.
        type: string
      expires_in:
        description: ExpiresIn is the optional expiration second of the access token.
        type: integer
      refresh_token:
        description: |-
          RefreshToken is a token that's used by the application
          (as opposed to the user) to refresh the access token
          if it expires.
        type: string
      token_type:
        description: |-
          TokenType is the type of token.
          The Type method returns either this or "Bearer", the default.
        type: string
      user:
        allOf:
        - $ref: '#/definitions/v1alpha1.UserBase'
        description: User user info
    type: object
  v1alpha1.BatchAssignRoleRequest:
    properties:
      instanceIds:
        description: InstanceIds role instanceIds.
        items:
          type: string
        type: array
      targets:
        description: Targets target resource instanceIds.
        items:
          type: string
        type: array
    required:
    - instanceIds
    type: object
  v1alpha1.CreatePolicyRequest:
    properties:
      description:
        maxLength: 30
        minLength: 1
        type: string
      meta:
        type: string
      name:
        type: string
      owner:
        type: string
      statements:
        items:
          $ref: '#/definitions/v1alpha1.Statement'
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    required:
    - name
    - statements
    - subjects
    - type
    type: object
  v1alpha1.CreateResourceRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/v1alpha1.Action'
        type: array
      api:
        type: string
      description:
        type: string
      isDefault:
        type: boolean
      method:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - actions
    - api
    - method
    - name
    - type
    type: object
  v1alpha1.CreateRoleRequest:
    properties:
      description:
        type: string
      displayName:
        type: string
      name:
        type: string
      owner:
        maxLength: 30
        minLength: 1
        type: string
    required:
    - name
    type: object
  v1alpha1.CreateUserRequest:
    properties:
      alias:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      userType:
        type: string
    required:
    - name
    - password
    type: object
  v1alpha1.DetailPolicyResponse:
    properties:
      adapter:
        description: casbin required
        type: string
      description:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      model:
        type: string
      owner:
        type: string
      policyRules:
        items:
          items:
            type: string
          type: array
        type: array
      resources:
        items:
          $ref: '#/definitions/v1alpha1.ResourceBase'
        type: array
      statements:
        items:
          $ref: '#/definitions/v1alpha1.Statement'
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  v1alpha1.DetailResourceResponse:
    properties:
      actions:
        description: Actions resource access mode.
        items:
          $ref: '#/definitions/v1alpha1.Action'
        type: array
      api:
        description: Type unique identification of resource API.
        type: string
      description:
        description: Description resource description.
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      method:
        description: Method resource method.
        type: string
      type:
        description: Type resource type.
        type: string
    required:
    - actions
    - api
    - method
    - type
    type: object
  v1alpha1.DetailRoleResponse:
    properties:
      description:
        description: Description tenant description.
        type: string
      disabled:
        description: Disabled tenant state.
        type: boolean
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      owner:
        description: Owner tenant owner name.
        type: string
      users:
        items:
          $ref: '#/definitions/v1alpha1.UserBase'
        type: array
    required:
    - owner
    type: object
  v1alpha1.PolicyBase:
    properties:
      adapter:
        description: casbin required
        type: string
      description:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      model:
        type: string
      owner:
        type: string
      policyRules:
        items:
          items:
            type: string
          type: array
        type: array
      statements:
        items:
          $ref: '#/definitions/v1alpha1.Statement'
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  v1alpha1.PolicyList:
    properties:
      items:
        items:
          $ref: '#/definitions/v1alpha1.PolicyBase'
        type: array
      totalCount:
        type: integer
    type: object
  v1alpha1.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1alpha1.ResourceBase:
    properties:
      actions:
        description: Actions resource access mode.
        items:
          $ref: '#/definitions/v1alpha1.Action'
        type: array
      api:
        description: Type unique identification of resource API.
        type: string
      description:
        description: Description resource description.
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      method:
        description: Method resource method.
        type: string
      type:
        description: Type resource type.
        type: string
    required:
    - actions
    - api
    - method
    - type
    type: object
  v1alpha1.ResourceList:
    properties:
      items:
        items:
          $ref: '#/definitions/v1alpha1.ResourceBase'
        type: array
      totalCount:
        type: integer
    type: object
  v1alpha1.RevokeRoleRequest:
    properties:
      instanceId:
        description: InstanceID role instanceID.
        type: string
      targets:
        description: Targets target resource instanceIds.
        items:
          type: string
        type: array
    required:
    - instanceId
    type: object
  v1alpha1.RoleBase:
    properties:
      description:
        description: Description tenant description.
        type: string
      disabled:
        description: Disabled tenant state.
        type: boolean
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      owner:
        description: Owner tenant owner name.
        type: string
    required:
    - owner
    type: object
  v1alpha1.RoleList:
    properties:
      items:
        items:
          $ref: '#/definitions/v1alpha1.RoleBase'
        type: array
      totalCount:
        type: integer
    type: object
  v1alpha1.Statement:
    properties:
      actions:
        items:
          type: string
        type: array
      effect:
        type: string
      resource:
        type: string
      resourceIdentifier:
        type: string
    required:
    - actions
    - effect
    - resource
    - resourceIdentifier
    type: object
  v1alpha1.UpdatePolicyRequest:
    properties:
      description:
        maxLength: 30
        minLength: 1
        type: string
      meta:
        type: string
      owner:
        type: string
      statements:
        items:
          $ref: '#/definitions/v1alpha1.Statement'
        type: array
      status:
        type: string
      subjects:
        items:
          type: string
        type: array
      type:
        type: string
    required:
    - statements
    - subjects
    - type
    type: object
  v1alpha1.UpdateResourceRequest:
    properties:
      actions:
        items:
          $ref: '#/definitions/v1alpha1.Action'
        type: array
      api:
        type: string
      description:
        type: string
      isDefault:
        type: boolean
      method:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - actions
    - api
    - method
    - name
    - type
    type: object
  v1alpha1.UpdateRoleRequest:
    properties:
      description:
        type: string
      displayName:
        type: string
      owner:
        type: string
    type: object
  v1alpha1.UpdateUserRequest:
    properties:
      alias:
        maxLength: 30
        minLength: 1
        type: string
      email:
        maxLength: 100
        minLength: 1
        type: string
      phone:
        type: string
    required:
    - email
    type: object
  v1alpha1.UserBase:
    properties:
      alias:
        type: string
      disabled:
        type: boolean
      email:
        type: string
      lastLoginTime:
        type: string
      metadata:
        allOf:
        - $ref: '#/definitions/v1.ObjectMeta'
        description: Standard object's metadata.
      password:
        type: string
      phone:
        type: string
      status:
        type: integer
      tenantId:
        type: integer
      userType:
        type: string
    type: object
  v1alpha1.UserList:
    properties:
      items:
        items:
          $ref: '#/definitions/v1alpha1.UserBase'
        type: array
      totalCount:
        type: integer
    type: object
host: localhost:8000
info:
  contact:
    email: wecoding@yeah.net
    name: coding-hui
    url: https://github.com/coding-hui/iam
  description: IAM ApiService API Doc.
  license:
    name: MIT
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: http://iam.wecoding.top/
  title: IAM API
  version: v1alpha
paths:
  /api/v1/auth/refresh-token:
    get:
      consumes:
      - application/json
      description: RefreshToken
      parameters:
      - description: refresh token
        in: header
        name: RefreshToken
        required: true
        type: string
      responses:
        "200":
          description: token info
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.RefreshTokenResponse'
              type: object
      summary: RefreshToken
      tags:
      - Authentication
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: Login by user account and password
      parameters:
      - description: login request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.AuthenticateRequest'
      responses:
        "200":
          description: token info
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.AuthenticateResponse'
              type: object
      summary: LoginSystem
      tags:
      - Authentication
  /api/v1/policies:
    get:
      description: List policies
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: policies
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.PolicyList'
              type: object
      security:
      - BearerTokenAuth: []
      summary: ListPolicies
      tags:
      - Policies
    post:
      consumes:
      - application/json
      description: Create a policy
      parameters:
      - description: policy rule
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreatePolicyRequest'
      responses:
        "200":
          description: Create a nnw policy
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: CreatePolicy
      tags:
      - Policies
  /api/v1/policies/{instanceId}:
    delete:
      description: DeleteByInstanceId policy by instanceId
      parameters:
      - description: name of a policy
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: Policy successfully deleted
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: DeletePolicy
      tags:
      - Policies
    get:
      description: GetByName a policy by name
      parameters:
      - description: name of a policy
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: Policy detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.DetailPolicyResponse'
              type: object
      security:
      - BearerTokenAuth: []
      summary: GetPolicyInfo
      tags:
      - Policies
    put:
      consumes:
      - application/json
      description: Update a Policy
      parameters:
      - description: Policy rule
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdatePolicyRequest'
      responses:
        "200":
          description: Update policy info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: UpdatePolicy
      tags:
      - Policies
  /api/v1/resources:
    get:
      description: List resources
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: resources
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.ResourceList'
              type: object
      security:
      - BearerTokenAuth: []
      summary: ListResources
      tags:
      - Resource
    post:
      consumes:
      - application/json
      description: Create resource
      parameters:
      - description: resource info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreateResourceRequest'
      responses:
        "200":
          description: create a new resource
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: CreateResource
      tags:
      - Resource
  /api/v1/resources/{instanceId}:
    delete:
      description: DeleteByInstanceId resource
      parameters:
      - description: name of a resource
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: delete resource
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: DeleteResource
      tags:
      - Resource
    get:
      description: GetByName resource info
      parameters:
      - description: name of a resource
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: resource detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.DetailResourceResponse'
              type: object
      security:
      - BearerTokenAuth: []
      summary: GetResourceInfo
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: Update resource
      parameters:
      - description: resource info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdateResourceRequest'
      responses:
        "200":
          description: update resource info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: UpdateResource
      tags:
      - Resource
  /api/v1/roles:
    get:
      description: List role
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: roles
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/v1alpha1.RoleBase'
                  type: array
              type: object
      security:
      - BearerTokenAuth: []
      summary: ListRoles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Create role
      parameters:
      - description: role info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreateRoleRequest'
      responses:
        "200":
          description: create a new role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: CreateRole
      tags:
      - Roles
  /api/v1/roles/{instanceId}:
    delete:
      description: DeleteByInstanceId role
      parameters:
      - description: identifier of a role
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: delete role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: DeleteRole
      tags:
      - Roles
    get:
      description: GetByName role info
      parameters:
      - description: identifier of a role
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: role detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.DetailRoleResponse'
              type: object
      security:
      - BearerTokenAuth: []
      summary: GetRoleInfo
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Update role
      parameters:
      - description: role info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdateRoleRequest'
      responses:
        "200":
          description: update role info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: UpdateRole
      tags:
      - Roles
  /api/v1/roles/{instanceId}/assign:
    post:
      description: Batch assign role
      parameters:
      - description: batch assign role request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.BatchAssignRoleRequest'
      responses:
        "200":
          description: assign role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: BatchAssignRole
      tags:
      - Roles
  /api/v1/roles/{instanceId}/revoke:
    post:
      description: Revoke role
      parameters:
      - description: revoke role request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.RevokeRoleRequest'
      responses:
        "200":
          description: revoke role
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: RevokeRole
      tags:
      - Roles
  /api/v1/users:
    get:
      description: List users
      parameters:
      - description: fuzzy search based on name
        in: query
        name: name
        type: string
      - description: fuzzy search based on alias
        in: query
        name: alias
        type: string
      - description: fuzzy search based on email
        in: query
        name: email
        type: string
      - description: query the page number
        in: query
        name: offset
        type: integer
      - description: query the page size number
        in: query
        name: limit
        type: integer
      responses:
        "200":
          description: users
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.UserList'
              type: object
      security:
      - BearerTokenAuth: []
      summary: ListUsers
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.CreateUserRequest'
      responses:
        "200":
          description: create a nnw user
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: CreateUser
      tags:
      - Users
  /api/v1/users/{instanceId}:
    delete:
      description: DeleteByInstanceId user
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: delete user
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: DeleteUser
      tags:
      - Users
    get:
      description: GetByName user info
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: user detail
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.UserBase'
              type: object
      security:
      - BearerTokenAuth: []
      summary: GetUserInfo
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update user info
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      - description: user info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/v1alpha1.UpdateUserRequest'
      responses:
        "200":
          description: update user info
          schema:
            $ref: '#/definitions/api.Response'
      security:
      - BearerTokenAuth: []
      summary: UpdateUser
      tags:
      - Users
  /api/v1/users/{instanceId}/roles:
    get:
      description: Get user roles
      parameters:
      - description: identifier of a user
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: user roles
          schema:
            allOf:
            - $ref: '#/definitions/api.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1alpha1.RoleList'
              type: object
      security:
      - BearerTokenAuth: []
      summary: GetUserRoles
      tags:
      - Users
  /ping:
    get:
      description: Check service is running
      responses:
        "200":
          description: pong
          schema:
            $ref: '#/definitions/api.Response'
      summary: Ping
      tags:
      - System
securityDefinitions:
  BearerTokenAuth:
    description: Set Bearer token in the request header
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
