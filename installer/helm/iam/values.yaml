# Default values for iam.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  imageRegistry: ""
  imagePullSecrets:
    - name: coding-registry
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  storageClass: ""

nameOverride: ""
fullnameOverride: ""

# Use either this ingress or the gateway, but not both at once.
# If you enable this, make sure to disable the gateway.
# You'll need to supply authn configuration for your ingress controller.
ingress:
  enabled: true
  ingressClAssName: traefik
  annotations: { }
  #    nginx.ingress.kubernetes.io/auth-type: basic
  #    nginx.ingress.kubernetes.io/auth-secret: loki-distributed-basic-auth
  #    nginx.ingress.kubernetes.io/auth-secret-type: auth-map
  #    nginx.ingress.kubernetes.io/configuration-snippet: |
  #    proxy_set_header X-Scope-OrgID $remote_user;
  paths:
    console:
      - /
    apiserver:
      - /api/v1
    authzserver:
      - //api/v1/authz
  hosts:
    - iam.wecoding.top
  # tls:
  #   - secretName: loki-distributed-tls
  #     hosts:
  #       - loki.example.com

# Configuration for the ApiServer
apiServer:
  # -- Specifies whether the ApiServer should be enabled
  enabled: true
  # -- image for ApiServer
  image:
    # -- The ApiServer image repository
    repository: devops-wecoding-docker.pkg.coding.net/wecoding/images/iam-apiserver
    # -- The ApiServer image pull policy
    pullPolicy: Always
    # -- The ApiServer image tag
    tag: "latest"
  # -- Config file for the ApiServer
  configFile: config/iam-apiserver.yaml
  createSecret: true
  # -- Number of replicas for the ApiServer
  replicas: 1
  autoscaling:
    # -- Enable autoscaling for the ApiServer
    enabled: false
    # -- Minimum autoscaling replicas for the ApiServer
    minReplicas: 1
    # -- Maximum autoscaling replicas for the ApiServer
    maxReplicas: 3
    # -- Target CPU utilisation percentage for the ApiServer
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for the ApiServer
    targetMemoryUtilizationPercentage:
  # -- See `kubectl explain deployment.spec.strategy` for more,
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  deploymentStrategy:
    type: RollingUpdate
  # -- The SecurityContext for ApiServer containers
  podSecurityContext: { }
  # -- The SecurityContext for ApiServer containers
  containerSecurityContext: { }
  # -- Resource requests and limits for the ApiServer
  resources:
    limits:
      cpu: 256m
      memory: 512Mi
    requests:
      cpu: 256m
      memory: 512Mi
  # -- Grace period to allow the ApiServer to shutdown before it is killed
  terminationGracePeriodSeconds: 30
  # -- Affinity for ApiServer pods. Passed through `tpl` and, thus, to be configured as string
  # @default -- Hard node and soft zone anti-affinity
  affinity: { }
  # -- Pod Disruption Budget maxUnavailable
  maxUnavailable: null
  # -- Node selector for ApiServer pods
  nodeSelector: { }
  # -- Tolerations for ApiServer pods
  tolerations: [ ]

  # ApiServer service configuration
  service:
    ports:
      http: 8000
      https: 8443
      grpc: 8001
    nodePorts:
      http: ""
      https: ""
      grpc: ""
    type: ClusterIP
    clusterIP: null
    nodePort: null
    loadBalancerIP: null
    loadBalancerSourceRanges: []
    annotations: {}
    labels: {}

# Configuration for the AuthzServer
authzServer:
  # -- Specifies whether the AuthServer should be enabled
  enabled: true
  # -- image for AuthzServer
  image:
    # -- The AuthzServer image repository
    repository: devops-wecoding-docker.pkg.coding.net/wecoding/images/iam-authzserver
    # -- The AuthzServer image pull policy
    pullPolicy: Always
    # -- The AuthzServer image tag
    tag: "latest"
  # -- Config file for the AuthzServer
  configFile: config/iam-authzserver.yaml
  createSecret: true
  # -- Number of replicas for the AuthzServer
  replicas: 1
  autoscaling:
    # -- Enable autoscaling for the AuthzServer
    enabled: false
    # -- Minimum autoscaling replicas for the AuthzServer
    minReplicas: 1
    # -- Maximum autoscaling replicas for the AuthzServer
    maxReplicas: 3
    # -- Target CPU utilisation percentage for the AuthzServer
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for the AuthzServer
    targetMemoryUtilizationPercentage:
  # -- See `kubectl explain deployment.spec.strategy` for more,
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  deploymentStrategy:
    type: RollingUpdate
  # -- The SecurityContext for AuthzServer containers
  podSecurityContext: { }
  # -- The SecurityContext for AuthzServer containers
  containerSecurityContext: { }
  # -- Resource requests and limits for the AuthzServer
  resources:
    limits:
      cpu: 256m
      memory: 512Mi
    requests:
      cpu: 256m
      memory: 512Mi
  # -- Grace period to allow the AuthzServer to shutdown before it is killed
  terminationGracePeriodSeconds: 30
  # -- Affinity for ApiServer pods. Passed through `tpl` and, thus, to be configured as string
  # @default -- Hard node and soft zone anti-affinity
  affinity: { }
  # -- Pod Disruption Budget maxUnavailable
  maxUnavailable: null
  # -- Node selector for AuthzServer pods
  nodeSelector: { }
  # -- Tolerations for AuthzServer pods
  tolerations: [ ]

  # AuthzServer service configuration
  service:
    ports:
      http: 8010
      https: 9443
    nodePorts:
      http: ""
      https: ""
    type: ClusterIP
    clusterIP: null
    nodePort: null
    loadBalancerIP: null
    loadBalancerSourceRanges: []
    annotations: {}
    labels: {}

# Configuration for the ApiServer Console
console:
  # -- Specifies whether the ApiServer should be enabled
  enabled: true
  # -- image for ApiServer
  image:
    # -- The ApiServer image repository
    repository: devops-wecoding-docker.pkg.coding.net/wecoding/images/iam-frontend
    # -- The ApiServer image pull policy
    pullPolicy: Always
    # -- The ApiServer image tag
    tag: "latest"
  # -- Config file for the ApiServer
  configFile: config/iam-console.conf
  # -- Number of replicas for the ApiServer
  replicas: 1
  autoscaling:
    # -- Enable autoscaling for the ApiServer
    enabled: false
    # -- Minimum autoscaling replicas for the ApiServer
    minReplicas: 1
    # -- Maximum autoscaling replicas for the ApiServer
    maxReplicas: 3
    # -- Target CPU utilisation percentage for the ApiServer
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for the ApiServer
    targetMemoryUtilizationPercentage:
  # -- See `kubectl explain deployment.spec.strategy` for more,
  # ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  deploymentStrategy:
    type: RollingUpdate
  # -- The SecurityContext for ApiServer containers
  podSecurityContext:
    fsGroup: 101
    runAsGroup: 101
    runAsNonRoot: true
    runAsUser: 101
  # -- The SecurityContext for ApiServer containers
  containerSecurityContext:
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
    allowPrivilegeEscalation: true
  # -- Resource requests and limits for the ApiServer
  resources:
    limits:
      cpu: 256m
      memory: 512Mi
    requests:
      cpu: 256m
      memory: 512Mi
  # -- Grace period to allow the ApiServer to shutdown before it is killed
  terminationGracePeriodSeconds: 30
  # -- Affinity for ApiServer pods. Passed through `tpl` and, thus, to be configured as string
  # @default -- Hard node and soft zone anti-affinity
  affinity: { }
  # -- Pod Disruption Budget maxUnavailable
  maxUnavailable: null
  # -- Node selector for ApiServer pods
  nodeSelector: { }
  # -- Tolerations for ApiServer pods
  tolerations: [ ]
  # ApiServer service configuration
  service:
    # -- Port of the ApiServer service
    port: 8080
    # -- Type of the ApiServer service
    type: NodePort
    # -- ClusterIP of the ApiServer service
    clusterIP: null
    # -- Node port if service type is NodePort
    nodePort: null
    # -- Load balancer IPO address if service type is LoadBalancer
    loadBalancerIP: null
    # -- Load balancer allow traffic from CIDR list if service type is LoadBalancer
    loadBalancerSourceRanges: [ ]
    # -- Set appProtocol for the service
    appProtocol: null
    # -- Annotations for the ApiServer service
    annotations: { }
    # -- Labels for ApiServer service
    labels: { }
