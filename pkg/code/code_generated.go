// Copyright (c) 2023 coding-hui. All rights reserved.
// Use of this source code is governed by a MIT style
// license that can be found in the LICENSE file.

// Code generated by "codegen -type=int /Users/liuyuhui/Codes/iam/pkg/code"; DO NOT EDIT.

package code

// init register error codes defines in this source code to `github.com/coding-hui/common/errors`
func init() {
	register(ErrUserNotFound, 404, "User not found")
	register(ErrUserAlreadyExist, 400, "User already exist")
	register(ErrUserNameIsEmpty, 400, "Username is empty")
	register(ErrDeleteOneself, 400, "Unable to delete yourself")
	register(ErrUserAlreadyDisabled, 400, "The user is already disabled")
	register(ErrUserAlreadyEnabled, 400, "The user is already enabled")
	register(ErrUserHasDisabled, 401, "The account has been disabled")
	register(ErrReachMaxCount, 400, "Secret reach the max count")
	register(ErrSecretNotFound, 404, "Secret not found")
	register(ErrPolicyNotFound, 404, "Policy not found")
	register(ErrPolicyAlreadyExist, 400, "Policy already exist")
	register(ErrPolicyNameIsEmpty, 400, "Policy name is empty")
	register(ErrResourceNotFound, 404, "Resource not found")
	register(ErrResourceAlreadyExist, 400, "Resource already exist")
	register(ErrResourceNameIsEmpty, 400, "Resource name is empty")
	register(ErrResourceInstanceIdIsEmpty, 400, "Resource instanceId is empty")
	register(ErrResourceHasAssignedPolicy, 400, "The resource has been assigned permission policies")
	register(ErrRoleNotFound, 404, "Role not found")
	register(ErrRoleAlreadyExist, 400, "Role already exist")
	register(ErrRoleNameIsEmpty, 400, "Role name is empty")
	register(ErrRoleHasAssignedUser, 400, "The role has been assigned to a user")
	register(ErrAssignRoleFailed, 400, "User role assignment fails. Please check the role status or contact the administrator")
	register(ErrUnsupportedAssignTarget, 400, "The assignment target is not supported. Only user or department are supported")
	register(ErrRevokeRoleFailed, 400, "User role revoke fails. Please check the role status or contact the administrator")
	register(ErrUnsupportedRevokeTarget, 400, "The revoke target is not supported. Only user or department are supported")
	register(ErrOrgNotFound, 404, "Organization not found")
	register(ErrOrgAlreadyExist, 400, "Organization already exist")
	register(ErrOrgAlreadyDisabled, 400, "The organization is already disabled")
	register(ErrOrgAlreadyEnabled, 400, "The organization is already enabled")
	register(ErrOrgHasDisabled, 401, "The organization has been disabled")
	register(ErrCannotDeleteBuiltInOrg, 400, "Built-in organizations cannot be deleted")
	register(ErrCannotDisableBuiltInOrg, 400, "Built-in organizations cannot be disabled")
	register(ErrMaxDepartmentsReached, 400, "The number of departments has reached its limit")
	register(ErrMemberAlreadyInDepartment, 400, "Member is already in department")
	register(ErrSubDepartmentsExist, 400, "Sub departments exist and cannot be deleted")
	register(ErrBindExternalAccount, 400, "Failed to bind external account")
	register(ErrUnbindExternalAccount, 400, "Failed to unbind external account")
	register(ErrExternalAccountAlreadyBound, 400, "External account already bound to another user")
	register(ErrApiKeyNotFound, 404, "API Key not found")
	register(ErrApiKeyAlreadyExist, 400, "API Key already exist")
	register(ErrApiKeyInvalid, 401, "Invalid API Key or Secret")
	register(ErrApiKeyInactive, 401, "API Key is not active")
	register(ErrApiKeyExpired, 401, "API Key has expired")
	register(ErrApiKeyAlreadyEnabled, 400, "API Key is already enabled")
	register(ErrApiKeyAlreadyDisabled, 400, "API Key is already disabled")
	register(ErrSuccess, 200, "OK")
	register(ErrUnknown, 500, "Internal server error")
	register(ErrBind, 400, "Error occurred while binding the request body to the struct")
	register(ErrValidation, 400, "Validation failed")
	register(ErrParam, 400, "Invalid request params")
	register(ErrPageNotFound, 404, "Page not found")
	register(ErrInvalidRequest, 404, "Invalid request")
	register(ErrDatabase, 500, "Database error")
	register(ErrPrimaryEmpty, 500, "Primary key is empty")
	register(ErrNilEntity, 500, "Entity is nil")
	register(ErrRecordExist, 500, "Data record is exist")
	register(ErrRecordNotExist, 500, "Data record is not exist")
	register(ErrIndexInvalid, 500, "Entity index is invalid")
	register(ErrEntityInvalid, 500, "Entity is invalid")
	register(ErrTableNameEmpty, 500, "Entity table name is empty")
	register(ErrEncrypt, 401, "Error occurred while encrypting the user password")
	register(ErrTokenInvalid, 401, "Token invalid")
	register(ErrSignatureInvalid, 401, "Signature is invalid")
	register(ErrTokenMalformed, 401, "Token is malformed")
	register(ErrTokenNotValidYet, 401, "Token is not valid yet")
	register(ErrExpired, 401, "Token expired")
	register(ErrTokenIssuedAt, 401, "Token used before issued")
	register(ErrMissingLoginValues, 401, "Missing Username or Password")
	register(ErrInvalidAuthHeader, 401, "Invalid authorization header")
	register(ErrMissingHeader, 401, "The `Authorization` header was empty")
	register(ErrPasswordIncorrect, 401, "Invalid Username or Password")
	register(ErrInvalidRefreshToken, 401, "Refresh token format is incorrect, please check")
	register(ErrUnauthorized, 403, "Unauthorized")
	register(ErrPermissionDenied, 403, "Permission denied")
	register(ErrIdentityProviderNotFound, 401, "Identity provider not found")
	register(ErrEncodingFailed, 500, "Encoding failed due to an error with the data")
	register(ErrDecodingFailed, 500, "Decoding failed due to an error with the data")
	register(ErrInvalidJSON, 500, "Data is not valid JSON")
	register(ErrEncodingJSON, 500, "JSON data could not be encoded")
	register(ErrDecodingJSON, 500, "JSON data could not be decoded")
	register(ErrInvalidYaml, 500, "Data is not valid Yaml")
	register(ErrEncodingYaml, 500, "Yaml data could not be encoded")
	register(ErrDecodingYaml, 500, "Yaml data could not be decoded")
}
